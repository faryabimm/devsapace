apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: devspace-postgres
spec:
  selector:
    matchLabels:
      app: devspace-postgres
  serviceName: devspace-postgres-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: devspace-postgres
    spec:
      terminationGracePeriodSeconds: 30
      serviceAccountName: devspace-default
      containers:
      - name: postgres
        image: postgres:11
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_PASSWORD
          value: {{ .Values.database.password }}
        - name: POSTGRES_USER
          value: "devspace"
        - name: POSTGRES_DB
          value: "devspace"
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready -U "devspace" -d "devspace" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready -U "devspace" -d "devspace" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 6
          failureThreshold: 1
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.database.storageClass }}
      storageClassName: {{ .Values.database.storageClass | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.database.size }}
